name: Rust CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  WORKING_DIRECTORY: ./dup_check

jobs:
  build:
    name: Build and Test
    runs-on: windows-latest

    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
    - uses: actions/checkout@v3
    
    - name: Install latest rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        default: true
        override: true
        components: rustfmt, clippy
    
    - name: Build
      run: cargo build --verbose
    
    - name: Run tests
      run: cargo test --verbose
    
    - name: Run clippy
      run: cargo clippy -- -D warnings
    
    - name: Check formatting
      run: cargo fmt -- --check

  release:
    name: Create Release
    needs: build
    runs-on: windows-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install latest rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        default: true
        override: true
    
    - name: Build release
      run: cargo build --release
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        body: |
          DupCheck ${{ github.ref }} - Safe Duplicate File Finder
          
          ## Features
          - Fast file scanning with SHA-256 hash comparison
          - SQLite-based caching for improved performance
          - Parallel processing using rayon
          - Safe file operations with Windows API integration
          - Progress tracking and detailed statistics
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.WORKING_DIRECTORY }}/target/release/dup_check.exe
        asset_name: dup_check.exe
        asset_content_type: application/octet-stream
