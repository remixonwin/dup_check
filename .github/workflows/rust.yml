name: Rust CI/CD

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  WORKING_DIRECTORY: ./dup_check

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
    - uses: actions/checkout@v3
    
    - name: Install latest rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        default: true
        override: true
        components: rustfmt, clippy
    
    - name: Build
      run: cargo build --verbose
    
    - name: Run tests
      run: cargo test --verbose
    
    - name: Run clippy
      run: cargo clippy -- -D warnings
    
    - name: Check formatting
      run: cargo fmt -- --check

    - name: Build release binary
      if: startsWith(github.ref, 'refs/tags/')
      run: cargo build --release

    - name: Upload artifacts
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v3
      with:
        name: dup_check-${{ matrix.os }}
        path: |
          ${{ env.WORKING_DIRECTORY }}/target/release/dup_check
          ${{ env.WORKING_DIRECTORY }}/target/release/dup_check.exe
        if-no-files-found: ignore

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Prepare release assets
      run: |
        mkdir release-assets
        mv dup_check-windows-latest/dup_check.exe release-assets/dup_check-windows.exe || true
        mv dup_check-ubuntu-latest/dup_check release-assets/dup_check-linux || true
        mv dup_check-macos-latest/dup_check release-assets/dup_check-macos || true
        chmod +x release-assets/dup_check-linux release-assets/dup_check-macos || true
    
    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      uses: softprops/action-gh-release@v1
      with:
        files: release-assets/*
        draft: false
        prerelease: false
        body: |
          DupCheck ${{ github.ref_name }} - Safe Duplicate File Finder
          
          ## Features
          - Fast file scanning with SHA-256 hash comparison
          - SQLite-based caching for improved performance
          - Parallel processing using rayon
          - Safe file operations with Windows API integration
          - Progress tracking and detailed statistics
          
          ## Downloads
          - Windows: dup_check-windows.exe
          - Linux: dup_check-linux
          - macOS: dup_check-macos
